"use strict";window.addEventListener("DOMContentLoaded",function(){var e;$("#card-address").click(function(e){$(this).toggleClass("card--active")}),e=(new Date).getFullYear(),document.querySelector(".year").innerHTML=2019<e?"2019 â€” "+e:e,$('[data-fancybox="preview"]').fancybox({thumbs:{autoStart:!1}}),function(){ymaps.ready(function(){(e=new ymaps.Map("yandex-map",{center:[62.032884,129.701342],zoom:16})).behaviors.disable("scrollZoom"),e.events.add("click",function(){e.behaviors.enable("scrollZoom")}),t=new ymaps.Placemark([62.03264,129.70136],{},{iconLayout:"default#image",iconImageHref:"img/logo@1x.png",iconImageSize:[20,20]}),e.geoObjects.add(t)});var e=void 0,t=void 0}(),$("#cards").mixItUp(),function(){var e=$("#menu__button"),t=$(".nav-list"),o=$(".nav__link"),i="nav-list--active";function a(){e.hasClass("active")?e.removeClass("active"):e.addClass("active")}e.on("click",function(e){e.preventDefault(),t.toggleClass(i),a()}),o.on("click",function(){t.removeClass(i),a()}),$(window).resize(function(){750<$(window).width()&&(t.removeAttr("style"),t.removeClass(i),e.hasClass("active")&&e.removeClass("active"))})}(),$("nav a,a[href='#top'],a[rel='m_PageScroll2id'],a.PageScroll2id").mPageScroll2id({highlightSelector:"nav a"}),$("#slick").slick({infinite:!0,slidesToShow:4,slidesToScroll:1,responsive:[{breakpoint:1250,settings:{slidesToShow:3,slidesToScroll:1,infinite:!0}},{breakpoint:750,settings:{slidesToShow:2,slidesToScroll:2}},{breakpoint:480,settings:{slidesToShow:1,slidesToScroll:1}}]}),function(){for(var o=document.querySelectorAll(".filter-block__button"),e=function(t){o[t].addEventListener("click",function(){for(var e=0;e<o.length;e++)o[e].classList.remove("filter-block__button--active");o[t].classList.contains("filter-block__button--active")?o[t].classList.remove("filter-block__button--active"):o[t].classList.add("filter-block__button--active")})},t=0;t<o.length;t++)e(t)}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
