"use strict";window.addEventListener("DOMContentLoaded",function(){var e;$("#card-address").click(function(e){$(this).toggleClass("card--active")}),e=(new Date).getFullYear(),document.querySelector(".year").innerHTML=2019<e?"2019 â€” "+e:e,$('[data-fancybox="preview"]').fancybox({thumbs:{autoStart:!1}}),function(){ymaps.ready(function(){(e=new ymaps.Map("yandex-map",{center:[62.032884,129.701342],zoom:16})).behaviors.disable("scrollZoom"),e.behaviors.disable("drag"),e.events.add("click",function(){e.behaviors.enable("scrollZoom"),e.behaviors.enable("drag")}),a=new ymaps.Placemark([62.03264,129.70136],{},{iconLayout:"default#image",iconImageHref:"img/logo.png",iconImageSize:[20,20]}),e.geoObjects.add(a)});var e=void 0,a=void 0}(),$("#cards").mixItUp(),function(){var e=$("#menu__button"),a=$(".nav-list"),t=$(".nav__link"),o="nav-list--active";function i(){e.hasClass("active")?e.removeClass("active"):e.addClass("active")}e.on("click",function(e){e.preventDefault(),a.toggleClass(o),i()}),t.on("click",function(){a.removeClass(o),i()}),$(window).resize(function(){750<$(window).width()&&(a.removeAttr("style"),a.removeClass(o),e.hasClass("active")&&e.removeClass("active"))})}(),$("nav a,a[href='#top'],a[rel='m_PageScroll2id'],a.PageScroll2id").mPageScroll2id({highlightSelector:"nav a"}),$("#slick").slick({infinite:!0,autoplay:!0,autoplaySpeed:3e3,draggable:!0,pauseOnHover:!0,slidesToShow:4,slidesToScroll:1,responsive:[{breakpoint:1250,settings:{slidesToShow:3,slidesToScroll:1,infinite:!0}},{breakpoint:750,settings:{slidesToShow:2,slidesToScroll:2}},{breakpoint:480,settings:{slidesToShow:1,slidesToScroll:1}}]}),function(){for(var t=document.querySelectorAll(".filter-block__button"),e=function(a){t[a].addEventListener("click",function(){for(var e=0;e<t.length;e++)t[e].classList.remove("filter-block__button--active");t[a].classList.contains("filter-block__button--active")?t[a].classList.remove("filter-block__button--active"):t[a].classList.add("filter-block__button--active")})},a=0;a<t.length;a++)e(a)}()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
